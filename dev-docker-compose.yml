version: "3.6"

services:
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: dev.Dockerfile
  #   ports:
  #     - "3000:3000"
  
  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - "database"
    links:
      - "database:postgres"

  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    command: certonly --standalone --non-interactive --agree-tos --register-unsafely-without-email
  
  database:
    image: postgres
    env_file:
      - backend/database.env
    volumes:
      - ./database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command: bash -c 'chown postgres /var/lib/postgresql/data/localhost.crt && chown postgres /var/lib/postgresql/data/localhost.key && chmod 740 /var/lib/postgresql/data/localhost.key && chmod 740 /var/lib/postgresql/data/localhost.crt && chgrp postgres /var/lib/postgresql/data/localhost.key && chgrp postgres /var/lib/postgresql/data/localhost.crt'
    # && docker run --name some-postgres -e POSTGRES_PASSWORD=mysecretpassword -d postgres
